cmake_minimum_required(VERSION 3.16)

project(MusicMicroService VERSION 0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Qt6 6.4 REQUIRED COMPONENTS Multimedia Quick)


qt_standard_project_setup()

qt_add_executable(appMusicMicroService
    main.cpp
)

qt_add_qml_module(appMusicMicroService
    URI MusicMicroService
    VERSION 1.0
      QML_FILES
            Main.qml
      SOURCES
        MusicPlayer.hpp MusicPlayer.cpp
        Autogenerated.cpp
      RESOURCES
            ./Icons/play-button.svg
            ./Icons/pause-button.svg
)


file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/Thorn\ to\ Liver\ -\ Hold\ on\ You.mp3
      DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Music)

# Qt for iOS sets MACOSX_BUNDLE_GUI_IDENTIFIER automatically since Qt 6.1.
# If you are developing for iOS or macOS you should consider setting an
# explicit, fixed bundle identifier manually though.
set_target_properties(appMusicMicroService PROPERTIES
#    MACOSX_BUNDLE_GUI_IDENTIFIER com.example.appMusicMicroService
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

target_link_libraries(appMusicMicroService
    PRIVATE Qt6::Quick
    Qt6::Multimedia
)

include(GNUInstallDirs)
install(TARGETS appMusicMicroService
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
